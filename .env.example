# Environment Configuration Example
# Copy this file to .env and update with your actual values
# 
# IMPORTANT: After copying to .env, ensure the data directories exist:
# mkdir -p data/parquet data/backups models logs

# =============================================================================
# ENVIRONMENT SETTINGS
# =============================================================================
# Options: development, production, testing
ENVIRONMENT=development

# =============================================================================
# DATABASE SETTINGS
# =============================================================================
# DuckDB database file path (will be created if doesn't exist)
DATABASE__DUCKDB_PATH=data/flights.duckdb

# Directory for Parquet export files (for analytics and backup)
DATABASE__PARQUET_PATH=data/parquet/

# Directory for database backups
DATABASE__BACKUP_PATH=data/backups/

# =============================================================================
# API SETTINGS
# =============================================================================
# API server host (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
API__HOST=0.0.0.0

# API server port
API__PORT=8000

# Enable debug mode (detailed error messages, auto-reload)
API__DEBUG=true

# Enable auto-reload on code changes (development only)
API__RELOAD=true

# Number of worker processes (set to 1 for development, 4+ for production)
API__WORKERS=1

# =============================================================================
# MACHINE LEARNING SETTINGS
# =============================================================================
# Directory for storing ML models
ML__MODEL_PATH=models/

# How often to retrain models (in hours)
ML__RETRAIN_INTERVAL_HOURS=24

# Cache TTL for predictions (in seconds)
ML__PREDICTION_CACHE_TTL=300

# =============================================================================
# OPTIMIZATION SETTINGS
# =============================================================================
# Maximum time for optimization algorithms (in seconds)
OPTIMIZATION__MAX_OPTIMIZATION_TIME_SECONDS=300

# Timeout for what-if analysis scenarios (in seconds)
OPTIMIZATION__WHAT_IF_TIMEOUT_SECONDS=5

# =============================================================================
# LOGGING SETTINGS
# =============================================================================
# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOGGING__LEVEL=INFO

# Log format: json (structured) or text (human-readable)
LOGGING__FORMAT=json

# Optional: Log file path (uncomment to enable file logging)
# LOGGING__LOG_FILE=logs/app.log

# =============================================================================
# DATA PROCESSING SETTINGS
# =============================================================================
# Maximum Excel file size for upload (in MB)
MAX_FILE_SIZE_MB=100

# Batch size for processing large datasets
BATCH_SIZE=1000

# =============================================================================
# EXTERNAL API KEYS (Optional)
# =============================================================================
# Weather API for real-time weather data (affects capacity calculations)
# Get from: https://openweathermap.org/api
# WEATHER_API_KEY=your_weather_api_key_here

# Google Gemini Pro API for AI-powered insights
# Get from: https://makersuite.google.com/app/apikey
# GEMINI_API_KEY=your_gemini_api_key_here

# =============================================================================
# ALERTING CONFIGURATION (Optional)
# =============================================================================
# Slack webhook URL for sending alerts
# Create at: https://api.slack.com/messaging/webhooks
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# =============================================================================
# ALERT THRESHOLDS
# =============================================================================
# Capacity utilization threshold for overload alerts (0.0-1.0)
ALERT_THRESHOLDS__CAPACITY_OVERLOAD_THRESHOLD=0.9

# Delay threshold in minutes for delay alerts
ALERT_THRESHOLDS__DELAY_THRESHOLD_MINUTES=15

# Number of affected flights for cascade impact alerts
ALERT_THRESHOLDS__CASCADE_IMPACT_THRESHOLD=5

# =============================================================================
# ANALYTICS ENGINE SETTINGS (Advanced)
# =============================================================================
# These settings are handled by the CapacityConfig in the analytics engine
# but can be overridden via environment if needed

# Default time bucket size for peak analysis (in minutes)
# ANALYTICS__DEFAULT_BUCKET_MINUTES=10

# Default airport capacity (flights per hour) for unknown airports
# ANALYTICS__DEFAULT_CAPACITY_PER_HOUR=35

# Weather impact multipliers (0.0-1.0)
# ANALYTICS__WEATHER_CALM_MULTIPLIER=1.0
# ANALYTICS__WEATHER_MEDIUM_MULTIPLIER=0.85
# ANALYTICS__WEATHER_STRONG_MULTIPLIER=0.65
# ANALYTICS__WEATHER_SEVERE_MULTIPLIER=0.3